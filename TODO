Current:
	
	☐ Bug: Browser not refreshing when opened

	☐ Bug: Syncer trying to unsync 'None' hud on new program start after restoring backup files-- This happens because is_synced gets sync state from disk. but the hud won't be loaded in

	☐ Bug: Descriptions gui -> save -> image errors. could be garbage collection or otherwise?

	☐ Refactor: Toggle most/all print statements in a class eg: hud descriptions

	☐ Refactor: Make start gui the main gui and browser a subgui? apparently it really is best practice to have 1 main gui
		☐ OR: Refactor: Make a little class to run the two main GUI's: Start & Browser

	☐ Modify browser on_close to go back to the start gui

	☐ Bug: Seemingly, the backup files are restored every single time on game start right nows

	☐ Testing: Test the program by using it to edit HUD's
	
	☐ Testing: Get the AHK version working and check it out to confirm feature parity

	☐ Feature: Readme.md -> add ahk version's readme.md with maybe some (formatting) improvements

Release:
	- GoaL: Being able to smug the program and have it 100% work for him on first try
	☐ Version numbers
	☐ Auto updating
	☐ Link to the github repo in an 'about' gui
	☐ A way to test the program in a fresh environment. Maybe a virtual machine
	☐ Full coverage unit testing? or atleast the important parts like HudDescription/ID FileHandler/more?
	☐ Ask GPT on how to do this properly

Post:
	☐ Post: Unit test: HudDescription
	☐ Post: Unit test: ID File Handler
	☐ Post: Multi-game support: Explore multi-game support feasibility
	☐ Post: Command line: Evaluate potential of using command line interface instead of GUI
	☐ Post: Idea: Threading (GUI) for lengthy operations such as shutil.rmtree mostly during install (Adds complexity) to prevent GUI's from freezing
	☐ Post: Optimize and improve functions, methods, and overall structure based on GPT suggestions
	☐ Post: Enable type checking? "python.analysis.typeCheckingMode": "off"
	☐ Post: Use types for variables and params and such? "python.analysis.typeCheckingMode": "off"
	☐ Post: decouple classes as much as possible by passing parameters instead of directly referencing other classes