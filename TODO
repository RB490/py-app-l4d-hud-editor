
✔ Feature: Rename start to program name + version name @done(23-09-07 11:15)
✔ Feature: Display hud name in browser title <hud name> Browser or Browser (<hud name>) @done(23-09-07 11:15)
✔ Feature: Adjust start so it also displays which hud is being edited? @done(23-09-07 11:40)
✔ Feature: Adjust start so it can also stop editing. Rename the edit button to 'stop editing' when selecting the edited hud & edit / disable as normal when selecting a different hud @done(23-09-07 11:41)
✔ Feature: Menu: Hud: Close option: Unsync + Unload @done(23-09-07 12:25)
✔ Feature: Menu: Sync option @done(23-09-07 12:25)
✔ Bug: Menu: Unsync also semi-unloads the hud from the program as the active edited hud. Don't do that @done(23-09-07 12:25)
✔ I could have a main function thing going on that determines whether a gui is open, if not, prompt to close or not or whatever @done(23-09-07 12:25)
✔ Refactor: And simplify: All the different close related code and behaviour: Slosing start/browser and close/exit on the menu @done(23-09-07 12:25)
	✔ Simplifyable: Don't close the browser @done(23-09-07 12:25)
✔ Bug: I close the browser, then start gui, script exits. it should ask whether i want to @done(23-09-07 12:51)
✔ Feature: Start: Display the currently edited hud somewhere on the gui @done(23-09-07 12:51)

Current:
	
	
Todo:


	
	☐ Bug: Hud is being edited -> I can start/repair/update/remove/switch dir mode

	☐ Refactor: Menu: File menu. Some options don't make sense
		☐ Having an installer option
		☐ A close & exit option // maybe rena

	☐ Idea: Instead of binding menu->open hud->hud to start_editing, i could check if the game is running, and if it isn't i could open the hud in the program but don't sync it and run game and such. basically a new method which separates start_editing and something like open_hud
		
	☐ Refactor: Add method doc to syncer class

	☐ Research: Ask GPT on how to properly test a program so it's ready for release
	
	☐ Research: Ask GPT on how to properly prepare a python program for release
	
	☐ Testing: Clean environment: Test the program in a virtual machine. Bonus points for getting the game to run through a shared folder
		- Amazingly the game did run, just whining about steam not running
	
	☐ Testing: Test the program by using it to edit HUD's

		
Release:
	☐ Goal: Being able to have third parties (smug) run the program and have it 100% work on first try