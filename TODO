✔ Feature: Add progress GUI for 'restoring dev game files' @done(23-08-29 17:59)
✔ Refactor: Cleanup redundant print statements @done(23-08-29 18:01)
✘ Bug: Browser: Move game position -> game is now focused. Behaviour should be cursor remains in the same place & focus is the same as before @cancelled(23-08-29 18:28) false positive
✔ Feature: Menu: Set Reload hud functionality // result = data_manager.get("game_mode") result = data_manager.set("game_mode", value) @done(23-08-29 18:29)
✔ Feature: Menu: Reload hud 'once' functionality @done(23-08-29 18:29)
✔ Feature: Hide the browser after having opened file. And maybe other options. probably not right now. @done(23-08-29 18:29)
✘ Feature: Modify move window to position code? Idea: Add padding param which is used to move game away from the border by specified amount. Could just be unnecsary complexity. Just set save custom position @cancelled(23-08-29 18:39)
✔ Feature: Right now the sync hud hotkey literally just syncs files. it needs to be bound to a method hat will also reload changes ingame based on settings (check if code for this already exists in the program) @done(23-08-29 18:40)

Current:
	
	

	☐ Feature: Menu: Reload modes menu should have checkboxes on them for which mode is currently selected

	☐ Feature: Sync hud hotkey is set to ctrl+s. Do i want to change this

	

	☐ Refactor: Duplicate code: handler/editor_show_menu_panel directorly runs reload mode? self.game.command.execute(self.data_manager.get("hud_reload_mode"))

	☐ Testing: Test the program by using it to edit HUD's
	
	☐ Testing: Get the AHK version working and check it out to confirm feature parity

	☐ Feature: Readme.md -> add ahk version's readme.md with maybe some (formatting) improvements


Release:
	- GoaL: Being able to smug the program and have it 100% work for him on first try
	☐ Version numbers
	☐ Auto updating
	☐ Link to the github repo in an 'about' gui
	☐ A way to test the program in a fresh environment. Maybe a virtual machine
	☐ Full coverage unit testing? or atleast the important parts like HudDescription/ID FileHandler/more?
	☐ Ask GPT on how to do this properly

Post:
	☐ Post: Unit test: HudDescription
	☐ Post: Unit test: ID File Handler
	☐ Post: Multi-game support: Explore multi-game support feasibility
	☐ Post: Command line: Evaluate potential of using command line interface instead of GUI
	☐ Post: Idea: Threading (GUI) for lengthy operations such as shutil.rmtree mostly during install (Adds complexity) to prevent GUI's from freezing
	☐ Post: Optimize and improve functions, methods, and overall structure based on GPT suggestions
	☐ Post: Enable type checking? "python.analysis.typeCheckingMode": "off"
	☐ Post: Use types for variables and params and such? "python.analysis.typeCheckingMode": "off"
	☐ Post: decouple classes as much as possible by passing parameters instead of directly referencing other classes