✔ Bug: Menu: Game: Make insecure a toggle like 'mute' is right now @done(23-09-06 11:37)
✔ Feature: Menu: Game: AlwaysOnTop + remember this setting(?) @done(23-09-06 11:57)
✔ Feature: Browser: Modify get vanilla file to rename to default extension without .backup if needed and create a temporary copy in %temp% and return that @done(23-09-06 12:03)
Current:

Todo:		


	☐ Feature: Menu: In AHK i had some method to keep resizing the game until it successfully did so to prevent the black window thing. i should do that in python now as its needed
	
	☐ Feature: BaseGUI: Add code example. Small as possible main gui

	☐ Feature: Installer: Threading: Instead of running large blocks of code inside threads instead run long running lines of code. for example deleting/copying a folder or extracting a VPK. Should be fairly straight forward to do. Though one issue is how will i retrieve potential errors and output in general from the thread?

	☐ Feature: Program: Rename to L4D2 HUD Editor or something like that. HUD Editor for L4D2

	☐ Feature: Menu: Move about into the help menu

	☐ Bug: Browser isn't visible -> unsync hud -> browser opens to clear treeview

	☐ Feature: Auto updating: GUI: Add version number from github vs version number from local script
	
	☐ Feature: Auto updating: add a check on program startup to compare versions. Only show that every couple days for example
	
	☐ Feature: About GUI: Rename into 'Update'?
	
	☐ Feature: Browser/Start GUI: Add version #?
	
	☐ Feature: 'restore_developer_directory' to restore backups: Do still need this? Having this feature is probably still a nice feature to have. But i guess i don't need it anymore. Atleast automatically

	☐ Feature: Version #: Automatically increase the # based on git commits or something else?

	☐ Feature: Auto updating: Look into how fully auto updating would work
	
	☐ Unit testing: Game Dir module
	
	☐ Unit testing: Syncer
	
	☐ Unit testing: ID Handler
	
	☐ Unit testing: HUD Description
	
	☐ Research: Ask GPT on how to properly test a program so it's ready for release
	
	☐ Research: Ask GPT on how to properly prepare a python program for release
	
	☐ Testing: Clean environment: Test the program in a virtual machine. Bonus points for getting the game to run through a shared folder
	
	☐ Testing: Test the program by using it to edit HUD's
	
Release:
	☐ Goal: Being able to have third parties (smug) run the program and have it 100% work on first try